<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:LocalControl="clr-namespace:LYTest.WPF.SG.Controls"
    xmlns:Light="clr-namespace:LYTest.WPF.SG.Controls.PilotLamp"
    xmlns:Converter1="clr-namespace:LYTest.WPF.SG.Converter"
    xmlns:view="clr-namespace:LYTest.WPF.SG.View"
    x:Class="LYTest.WPF.SG.MainWindow"
    Title="深圳市隆元科技有限公司检测系统"
    WindowStartupLocation="CenterScreen"
    MinHeight= "700" MinWidth="1280"
    Height="700" Width="1280"
    WindowState="Maximized" WindowStyle="None"
    TextOptions.TextFormattingMode="Display" 
    UseLayoutRounding="True" Background="{DynamicResource 窗口背景色}" >
    <Window.Resources>
        <Converter1:NotBoolConverter x:Key="NotBoolConverter"/>
    </Window.Resources>
    <DockPanel LastChildFill="True" >
        <LocalControl:UserMenu2 DockPanel.Dock="Top" Background="Transparent" />

        <StatusBar Height="45" Background="Transparent" DockPanel.Dock="Bottom">
            <StatusBarItem>
                <StackPanel Orientation="Horizontal" Margin="5 0 0 0">
                    <Image Name="imageEqupmentStatus" Height="18"  >
                        <Image.Resources>
                            <Style TargetType="Image">
                                <Setter Property="Source" Value="/Images/断开.png"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="false">
                                        <Setter Property="Source" Value="/Images/断开.png"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="true">
                                        <Setter Property="Source" Value="/Images/连接.png"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Resources>
                    </Image>
                    <TextBlock Margin="4 0 0 0 " Name="textEqupmentStatus">
                        <TextBlock.Resources>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="false">
                                        <Setter Property="Text" Value="联机失败"/>
                                        <Setter Property="Foreground" Value="red"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="true">
                                        <Setter Property="Text" Value="联机成功"/>
                                        <Setter Property="Foreground" Value="Green"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Resources>
                    </TextBlock>
                    <!--台体信息-->
                    <TextBlock Text="{Binding EquipmentType}"
                                   VerticalAlignment="Center"
                                   Name="textEquipmentType"/>
                    <TextBlock Margin="3,0" Text="{Binding ID}"
                                   VerticalAlignment="Center"
                                   Name="textEquipmentNo"/>

                </StackPanel>
            </StatusBarItem>
            <!--检定时候走马灯效果-->
            <StatusBarItem Margin="20,0">
                <StackPanel Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="Text" Value="停止检定"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecking}" Value="true">
                                    <Setter Property="Text" Value="正在检定"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock ToolTip="检定状态" x:Name="textBlockCheckStatus"/>
                    <Light:AlternatingLamp  x:Name="lightCheckStatus" Margin="3,0"
							                   VerticalAlignment="Center"
							                   Width="52"
							                   Height="16"
                                               Shine="{Binding  IsChecking}"
                                               Flash="{Binding NewArrived, Mode=TwoWay}"
                                               LightColor="#DDD"
                                               Visibility="Collapsed"/>
                    <!--x:Name="lightCheckStatus"-->
                    <!--Flash="{Binding NewArrived, Mode=TwoWay}"-->
                    <!--LightColor="Green"-->


                </StackPanel>
            </StatusBarItem>

            <!--当前正在检定项目的名称和进度-->
            <StatusBarItem>
                <StackPanel Orientation="Horizontal"  Name="stackPanelTime">

                    <TextBlock Text="进度"  VerticalAlignment="Center" Margin="3"/>
                    <ProgressBar Width="150" Height="12"   
                                         ToolTip="{Binding TimeCollection.SelectedItem.TextTooltip}"
                                     Maximum="{Binding TimeCollection.SelectedItem.TotalTime,Mode=OneWay}"
                                     Value="{Binding TimeCollection.SelectedItem.PastTime,Mode=OneWay}"/>
                    <TextBlock Text="{Binding  TimeCollection.SelectedItem.StringPastTime}"
                                                   ToolTip="剩余时间"
                                                   VerticalAlignment="Center"
                                                   Margin="3,0,15,0"/>
                    <TextBlock Text="{Binding CheckMode}"
                                   VerticalAlignment="Center"
							       x:Name="textBlockTestMode"
							       ToolTip="检定模式"
							       Margin="3,0"/>
                    <!--<TextBlock x:Name="textBlockSchemaName"
							       Text="{Binding SelectedSchema.SCHEMA_NAME}"
                                   VerticalAlignment="Center"
							       Margin="3,0"
							       MaxWidth="160"
							       ToolTip="检定方案名称"/>-->
                    <TextBlock Text="{Binding CheckingName}"
                                   VerticalAlignment="Center"
							       x:Name="textBlockCheckName"
                                   ToolTip="正在检定项目"
                                    Margin="3,0" FontWeight="ExtraBold"/>
                    <TextBlock Text="{Binding StringCheckIndex}"
                                   VerticalAlignment="Center"
							       x:Name="textBlockCheckIndex"
							       ToolTip="当前步骤"
							       Margin="0"/>
                </StackPanel>
            </StatusBarItem>

            <!--检验员核验员信息-->
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal"
                                Name="stackPanel_CheckerUser">
                    <LocalControl:LoadingWait x:Name="_loading"  Visibility="{Binding IsChecking, Converter={StaticResource BoolToVisibilityConverter}}" Width="25" Height="25" Margin="0 0 10 0"/>
                    <TextBlock Name="TipsStr" Text="{Binding MessageTips}" MinWidth="400"  VerticalAlignment="Center" 
                                   FontSize="16"/>

                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" Text="检验员" />
                    <TextBlock VerticalAlignment="Center" Margin="5,0" FontWeight="ExtraBold" Text="{Binding TestPerson}"/>
                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" Text="核验员"/>
                    <TextBlock VerticalAlignment="Center" Margin="5,0" FontWeight="ExtraBold" Text="{Binding AuditPerson}" />
                </StackPanel>
            </StatusBarItem>
        </StatusBar>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="165" MaxHeight="600"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="2" Margin="10,0" x:Name="monitorGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Border Background="Black" CornerRadius="10"  Grid.Column="4" Padding="10">
                    <view:View_StdMessage Visibility="{Binding IsVisibleStdMessage, Converter={StaticResource BoolToVisibilityConverter}}" />
                </Border>
                <GridSplitter ResizeDirection="Columns" Grid.Column="1" Width="5" Background="Transparent" VerticalAlignment="Stretch" HorizontalAlignment="Center"  />
                <Border Background="White" Grid.Column="2" CornerRadius="10" >
                    <view:View_Log BorderThickness="0" Margin="10,0"/>
                </Border>
                
                <GridSplitter ResizeDirection="Columns" Margin="0" Grid.Column="3" Background="Transparent" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  />
                <Border Background="White" CornerRadius="10"  Grid.Column="0">
                    <view:View_MeterInfoSimple Margin="10,0" HorizontalAlignment="Stretch" />
                </Border>
            </Grid>

            <GridSplitter ResizeDirection="Rows" Margin="0" Grid.Row="1" Background="Transparent" HorizontalAlignment="Stretch" Height="10"  />


            <Border Grid.Row="0"  Background="White" Visibility="Visible" Margin="10,10,10,0" CornerRadius="10" Padding="0,0,0,0">
                <TabControl x:Name="AppDock2"  SelectedIndex="{Binding SelectIndex,Mode=TwoWay}" Margin="5,0,5,5" 
                            Background="Transparent" BorderThickness="0" Padding="0" />


            </Border>
        </Grid>


    </DockPanel>

</Window>