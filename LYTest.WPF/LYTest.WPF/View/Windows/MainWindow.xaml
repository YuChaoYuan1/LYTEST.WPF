<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:LocalControl="clr-namespace:LYTest.WPF.Controls"
    xmlns:Light="clr-namespace:LYTest.WPF.Controls.PilotLamp"
    xmlns:Converter1="clr-namespace:LYTest.WPF.Converter"
    xmlns:view="clr-namespace:LYTest.WPF.View"
    Foreground="{DynamicResource 字体颜色标准}"
    x:Class="LYTest.WPF.MainWindow"
    Title="深圳市隆元科技有限公司检测系统"
    WindowStartupLocation="CenterScreen"
    MinHeight= "700"
    MinWidth="1280"
    Height="700"
    Width="1280"
    WindowState="Maximized"
    WindowStyle="None"
    TextOptions.TextFormattingMode="Display" 
    UseLayoutRounding="True"
    Background="{DynamicResource 窗口背景色}"
    ResizeMode="CanResizeWithGrip"
    AllowsTransparency="True" 
    MaxWidth="{StaticResource {x:Static SystemParameters.MaximizedPrimaryScreenWidthKey}}" 
    MaxHeight="{StaticResource {x:Static SystemParameters.MaximizedPrimaryScreenHeightKey}}">
    <Window.Resources>
        <Converter1:NotBoolConverter x:Key="NotBoolConverter"/>
    </Window.Resources>
    <Grid HorizontalAlignment="Stretch"                 
		VerticalAlignment="Stretch" >
        <DockPanel LastChildFill="True">
            <LocalControl:UserMenu2 DockPanel.Dock="Top"/>

            <StatusBar Height="45"
                Background="{DynamicResource 窗口背景深色}"
                Foreground="{DynamicResource 字体颜色标准}"
				DockPanel.Dock="Bottom">
                <StatusBarItem>
                    <StackPanel Orientation="Horizontal" Margin="5 0 0 0">
                        <Image Name="imageEqupmentStatus"
                               Height="18"  >
                            <Image.Resources>
                                <Style TargetType="Image">
                                    <Setter Property="Source" Value="/Images/png-1681.png"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsConnected}" Value="false">
                                            <Setter Property="Source" Value="/Images/png-1681.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsConnected}" Value="true">
                                            <Setter Property="Source" Value="/Images/png-1682.png"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Resources>
                        </Image>
                        <TextBlock Margin="4 0 0 0 " Name="textEqupmentStatus">
                            <TextBlock.Resources>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsConnected}" Value="false">
                                            <Setter Property="Text" Value="联机失败"/>
                                            <Setter Property="Foreground" Value="red"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsConnected}" Value="true">
                                            <Setter Property="Text" Value="联机成功"/>
                                            <Setter Property="Foreground" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Resources>
                        </TextBlock>
                        <!--台体信息-->
                        <TextBlock Text="{Binding EquipmentType}"
                                   VerticalAlignment="Center"
                                   Name="textEquipmentType"/>
                        <TextBlock Margin="3,0" Text="{Binding ID}"
                                   VerticalAlignment="Center"
                                   Name="textEquipmentNo"/>

                    </StackPanel>
                </StatusBarItem>
                <!--检定时候走马灯效果-->
                <StatusBarItem Margin="20,0">
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="停止检定"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecking}" Value="true">
                                        <Setter Property="Text" Value="正在检定"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock ToolTip="检定状态" x:Name="textBlockCheckStatus"/>
                        <Light:AlternatingLamp  x:Name="lightCheckStatus" Margin="3,0"
							                   VerticalAlignment="Center"
							                   Width="52"
							                   Height="16"
                                               Shine="{Binding  IsChecking}"
                                               Flash="{Binding NewArrived, Mode=TwoWay}"
                                               LightColor="#DDD"
                                               Visibility="Collapsed"/>
                        <!--x:Name="lightCheckStatus"-->
                        <!--Flash="{Binding NewArrived, Mode=TwoWay}"-->
                        <!--LightColor="Green"-->


                    </StackPanel>
                </StatusBarItem>

                <!--当前正在检定项目的名称和进度-->
                <StatusBarItem>
                    <StackPanel Orientation="Horizontal"  Name="stackPanelTime">

                        <TextBlock Text="进度"  VerticalAlignment="Center" Margin="3"/>
                        <ProgressBar Width="150" Height="12"   
                                         ToolTip="{Binding TimeCollection.SelectedItem.TextTooltip}"
                                     Maximum="{Binding TimeCollection.SelectedItem.TotalTime,Mode=OneWay}"
                                     Value="{Binding TimeCollection.SelectedItem.PastTime,Mode=OneWay}"/>
                        <TextBlock Text="{Binding  TimeCollection.SelectedItem.StringPastTime}"
                                                   ToolTip="剩余时间"
                                                   VerticalAlignment="Center"
                                                   Margin="3,0,15,0"/>
                        <TextBlock Text="{Binding CheckMode}"
                                   VerticalAlignment="Center"
							       x:Name="textBlockTestMode"
							       ToolTip="检定模式"
							       Margin="3,0"/>
                        <TextBlock x:Name="textBlockSchemaName"
							       Text="{Binding SelectedSchema.SCHEMA_NAME}"
                                   VerticalAlignment="Center"
							       Margin="3,0"
							       MaxWidth="160"
							       ToolTip="检定方案名称"/>
                        <TextBlock Text="{Binding CheckingName}"
                                   VerticalAlignment="Center"
							       x:Name="textBlockCheckName"
                                   ToolTip="正在检定项目"
                                    Margin="3,0" FontSize="16"/>
                        <TextBlock Text="{Binding StringCheckIndex}"
                                   VerticalAlignment="Center"
							       x:Name="textBlockCheckIndex"
							       ToolTip="当前步骤"
							       Margin="0"/>
                    </StackPanel>
                </StatusBarItem>



                <!--检验员核验员信息-->
                <StatusBarItem HorizontalAlignment="Right">
                    <StackPanel Orientation="Horizontal"
                                Name="stackPanel_CheckerUser">
                        <LocalControl:LoadingWait x:Name="_loading"  Visibility="{Binding IsChecking, Converter={StaticResource BoolToVisibilityConverter}}" Width="25" Height="25" Margin="0 0 10 0"/>
                        <TextBlock Name="TipsStr" Text="{Binding MessageTips}" MinWidth="400"  VerticalAlignment="Center" 
                                   FontSize="16"/>

                        <!--<StackPanel Name="stackPanelTime"
                                         Orientation="Horizontal">
                            <TextBlock Text="进度" 
                                       VerticalAlignment="Center"
                                       Margin="3"/>
                            <ProgressBar Width="150" Height="12"
                                         ToolTip="{Binding TextTooltip}"
                                     Maximum="{Binding TotalTime,Mode=OneWay}"
                                     Value="{Binding PastTime,Mode=OneWay}"
                                 Margin="3,0"/>
                            <TextBlock Text="{Binding StringLeftTime}"
                                                   ToolTip="剩余时间"
                                                   VerticalAlignment="Center"
                                                   Margin="3,0,15,0"/>
                            <TextBlock Text="{Binding TimeCollection.SelectedItem.StringPastTime}"
                                                   VerticalAlignment="Center"
                                                   Margin="3,0,15,0"/>
                        </StackPanel>-->
                        <TextBlock Text="检验员"  VerticalAlignment="Center"   Margin="15,0,0,0"/>
                        <TextBlock Margin="5,0"
                                   VerticalAlignment="Center"
                                   Text="{Binding TestPerson}"/>
                        <TextBlock Text="核验员"
                                   VerticalAlignment="Center"
                                    Margin="15,0,0,0"/>
                        <TextBlock Margin="5,0,10,0"   
                                   VerticalAlignment="Center"
                                   Text="{Binding AuditPerson}"/>
                    </StackPanel>
                </StatusBarItem>


            </StatusBar>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="165" MaxHeight="600"/>
                </Grid.RowDefinitions>
                <!--监视窗口-->
                <Grid Name="monitorGrid"  Grid.Row="2"  >

                    <!--<Border   BorderThickness="0 3 0 0" BorderBrush="#00027B" CornerRadius="5">-->
                    <DockPanel LastChildFill="True">
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom"   Background="#00027B">
                            <Border  CornerRadius="5 5 0 0" Width="80" Height="20" Background="#01DF01"  Visibility="{Binding IsVisibleLogMessage, Converter={StaticResource NotBoolToVisibilityConverter}}">
                                <Button  Click="Log_visible_click"  Content="日志信息" Foreground="White" Background="Transparent" BorderThickness="0" Style="{Binding }"/>
                            </Border>
                            <Border  CornerRadius="5 5 0 0" Margin="10 0 5 0" Width="80" Height="20" Background="#01DF01" Visibility="{Binding IsVisibleStdMessage, Converter={StaticResource NotBoolToVisibilityConverter}}">
                                <Button Click="Std_visible_click" Content="标准表信息"  Foreground="White"  Background="Transparent" BorderThickness="0" Style="{Binding }" />
                            </Border>
                            <Border  CornerRadius="5 5 0 0" Margin="10 0 5 0" Width="80" Height="20" Background="#01DF01" Visibility="{Binding IsVisibleStdMessages, Converter={StaticResource NotBoolToVisibilityConverter}}">
                                <Button Click="Std_visible_click" Content="表信息"  Foreground="White"  Background="Transparent" BorderThickness="0" Style="{Binding }" />
                            </Border>
                        </StackPanel>
                        <!--<DockPanel LastChildFill="True"    >
                                <view:View_StdMessage DockPanel.Dock="Left"  Visibility="{Binding IsVisibleStdMessage, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                <view:View_Log  Visibility="{Binding IsVisibleLogMessage, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            </DockPanel>-->
                        <Grid RenderTransformOrigin="0.416,0.446">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <view:View_StdMessage Grid.Column="0"  Visibility="{Binding IsVisibleStdMessage, Converter={StaticResource BoolToVisibilityConverter}}" Width="427"/>
                            <GridSplitter ResizeDirection="Columns" Margin="0" Grid.Column="1" Background="#00027B" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  />
                            <view:View_Log  Grid.Column="2" Visibility="{Binding IsVisibleLogMessage, Converter={StaticResource BoolToVisibilityConverter}}" Margin="0"/>
                            <GridSplitter ResizeDirection="Columns" Margin="0" Grid.Column="3" Background="#00027B" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  />
                            <view:View_MeterInfoSimple  Grid.Column="4" Visibility="{Binding IsVisibleStdMessages, Converter={StaticResource BoolToVisibilityConverter}}" Margin="0,0,5,0"/>
                        </Grid>
                    </DockPanel>
                    <!--</Border>-->
                </Grid>


                <GridSplitter ResizeDirection="Rows" Margin="0" Grid.Row="1" Background="#00027B" HorizontalAlignment="Stretch" Height="5"  />


                <Grid Grid.Row="0"  Background="{DynamicResource 窗口背景色}" Visibility="Visible">
                    <TabControl x:Name="AppDock2"  SelectedIndex="{Binding SelectIndex,Mode=TwoWay}" Margin="2 0 0 -2" Foreground="Black"   Background="Transparent" BorderBrush="{DynamicResource 分隔条颜色}" BorderThickness="0 1 0 0">
                        <!--<TabControl.ItemTemplate>
                        <DataTemplate>
                            <local2:TabItemClose Style="{StaticResource tabitemstyle}"/>
                        </DataTemplate>
                    </TabControl.ItemTemplate>-->
                    </TabControl>
                </Grid>
            </Grid>
        </DockPanel>

    </Grid>

</Window>