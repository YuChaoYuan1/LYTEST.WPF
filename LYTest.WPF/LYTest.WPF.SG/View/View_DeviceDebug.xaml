<basemodel:DockControlDisposable
    x:Class="LYTest.WPF.SG.View.View_DeviceDebug"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local1="clr-namespace:LYTest.ViewModel.Debug;assembly=LYTest.ViewModel"
    xmlns:Controls1="clr-namespace:LYTest.WPF.SG.Controls"
    xmlns:basemodel="clr-namespace:LYTest.WPF.SG.Model"
    mc:Ignorable="d" Foreground="{DynamicResource 字体颜色标准}" Margin="0,10,0,0"
    d:DesignHeight="600" d:DesignWidth="1200">
    <UserControl.Resources>
        <local1:PowerViewModel x:Key="PowerViewModel"/>
        <local1:ErrorControlViewModel x:Key="ErrorControlViewModel"/>
        <local1:MeterControlViewModel x:Key="MeterControlViewModel"/>
        <local1:QueryDataBase x:Key="QueryDataBase"/>
        <local1:Debug_ProtViewModel x:Key="Debug_ProtViewModel"/>
        <local1:MultiBoardViewModel x:Key="MultiBoardViewModel"/>
        <local1:Debug_TimeZonePeriodViewModel x:Key="TimeZonePeriodViewModel"/>
        <local1:Debug_HarmonicViewModel x:Key="Debug_HarmonicViewModel"/>

        <Style TargetType="Button" x:Key="greenButtonStyle" BasedOn="{StaticResource SuccessButtonStyle}">
            <Setter Property="Width" Value="100" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Margin" Value="1" />
            <Setter Property="Command" Value="{Binding LocalCommand}" />
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource PrimaryButtonStyle}">
            <Setter Property="Width" Value="100" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Margin" Value="1" />
            <Setter Property="Command" Value="{Binding LocalCommand}" />
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="30" />

        </Style>

        <Style TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource 窗口背景色}" />
            <Setter Property="CornerRadius" Value="10" />
            <Setter Property="Margin" Value="0,5,5,0" />
        </Style>
        <Style TargetType="TextBlock" x:Key="headTextStyle">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />

        </Style>

    </UserControl.Resources>
    <Grid>
        <TabControl>
            <TabItem   Header="基本控制">
                <DockPanel LastChildFill="True">
                    <!--源控制-->
                    <Border DockPanel.Dock="Left" DataContext="{StaticResource PowerViewModel}" >

                        <StackPanel Orientation="Vertical" Margin="5">
                            <TextBlock Text="源控制" Style="{StaticResource headTextStyle}" Margin="0,10"/>
                            <StackPanel Orientation="Horizontal" Margin="0 2 0 2" >
                                <TextBlock Text="接线" VerticalAlignment="Center" Margin="2 0 2 0"  Width="30" TextAlignment="Right"/>
                                <Controls1:ControlEnumComboBox    Width="100"    EnumName="CLFS"  Style="{DynamicResource StyleComboBox}"
                                                      SelectedValue="{Binding Setting,Mode=TwoWay}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0 2 0 2" >
                                <TextBlock Text="Ua" VerticalAlignment="Center" Margin="2 0 2 0"  Width="30" TextAlignment="Right"/>
                                <TextBox Width="80"  TextAlignment="Right" Style="{Binding}" Text="{Binding Ua,Mode=TwoWay}"/>
                                <TextBlock Text="V"  VerticalAlignment="Center" Margin="2 0 15 0"/>
                                <TextBox Width="80" TextAlignment="Right" Style="{Binding}" Text="{Binding PhaseUa,Mode=TwoWay}"/>
                                <TextBlock Text="°"  VerticalAlignment="Center"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0 2 0 2" >
                                <TextBlock Text="Ub" VerticalAlignment="Center" Margin="2 0 2 0"  Width="30" TextAlignment="Right"/>
                                <TextBox Width="80"  TextAlignment="Right" Style="{Binding}" Text="{Binding Ub,Mode=TwoWay}"/>
                                <TextBlock Text="V"  VerticalAlignment="Center" Margin="2 0 15 0"/>
                                <TextBox Width="80" TextAlignment="Right" Style="{Binding}" Text="{Binding PhaseUb,Mode=TwoWay}"/>
                                <TextBlock Text="°"  VerticalAlignment="Center"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0 2 0 2" >
                                <TextBlock Text="Uc" VerticalAlignment="Center" Margin="2 0 2 0"  Width="30" TextAlignment="Right"/>
                                <TextBox Width="80"  TextAlignment="Right" Style="{Binding}" Text="{Binding Uc,Mode=TwoWay}" />
                                <TextBlock Text="V"  VerticalAlignment="Center" Margin="2 0 15 0"/>
                                <TextBox Width="80" TextAlignment="Right" Style="{Binding}" Text="{Binding PhaseUc,Mode=TwoWay}"/>
                                <TextBlock Text="°"  VerticalAlignment="Center"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0 2 0 2" >
                                <TextBlock Text="Ia" VerticalAlignment="Center" Margin="2 0 2 0"  Width="30" TextAlignment="Right"/>
                                <TextBox Width="80"  TextAlignment="Right" Style="{Binding}" Text="{Binding Ia,Mode=TwoWay}"/>
                                <TextBlock Text="A"  VerticalAlignment="Center" Margin="2 0 15 0"/>
                                <TextBox Width="80" TextAlignment="Right" Style="{Binding}" Text="{Binding PhaseIa,Mode=TwoWay}"/>
                                <TextBlock Text="°"  VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0 2 0 2" >
                                <TextBlock Text="Ib" VerticalAlignment="Center" Margin="2 0 2 0"  Width="30" TextAlignment="Right"/>
                                <TextBox Width="80"  TextAlignment="Right" Style="{Binding}" Text="{Binding Ib,Mode=TwoWay}"/>
                                <TextBlock Text="A"  VerticalAlignment="Center" Margin="2 0 15 0"/>
                                <TextBox Width="80" TextAlignment="Right" Style="{Binding}" Text="{Binding PhaseIb,Mode=TwoWay}"/>
                                <TextBlock Text="°"  VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0 2 0 2" >
                                <TextBlock Text="Ic" VerticalAlignment="Center" Margin="2 0 2 0"  Width="30" TextAlignment="Right"/>
                                <TextBox Width="80"  TextAlignment="Right" Style="{Binding}" Text="{Binding Ic,Mode=TwoWay}"/>
                                <TextBlock Text="A"  VerticalAlignment="Center" Margin="2 0 15 0"/>
                                <TextBox Width="80" TextAlignment="Right" Style="{Binding}" Text="{Binding PhaseIc,Mode=TwoWay}"/>
                                <TextBlock Text="°"  VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0 2 0 2" >
                                <TextBlock Text="频率" VerticalAlignment="Center" Margin="2 0 2 0"  Width="30" TextAlignment="Right"/>
                                <TextBox Width="80"  TextAlignment="Right" Style="{Binding}" Text="{Binding Freq,Mode=TwoWay}"/>
                                <TextBlock Text="Hz"  VerticalAlignment="Center" Margin="2 0 15 0"/>
                            </StackPanel>

                            <UniformGrid Columns="2" Margin="0 30 0 0" >
                                <Button Content="升 源" Width="100" CommandParameter="PowerOnFree"  Command="{Binding LocalCommand}"/>
                                <Button Content="关 源" Width="100" CommandParameter="PowerOffFree"  Command="{Binding LocalCommand}"/>
                            </UniformGrid>
                        </StackPanel>

                    </Border>

                    <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                        <StackPanel Orientation="Vertical" VerticalAlignment="Top">
                            <!--表位控制-->
                            <Border >
                                <StackPanel Margin="10" DataContext="{StaticResource ErrorControlViewModel}">
                                    <TextBlock Text="表位控制" Style="{StaticResource headTextStyle}" Margin="0,10" />
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Content="全选1-30" Name="chk_All1" Margin="0 0 10 0"  IsChecked="{Binding IsAllCheck1,Mode=TwoWay}" />
                                        <CheckBox Content="全选31-60" Name="chk_All2"  Margin="0 0 10 0"   IsChecked="{Binding IsAllCheck2,Mode=TwoWay}" />
                                        <CheckBox Content="全选1-15" Name="chk_All3" Margin="0 0 10 0" Tag="1"  Checked="Chk_All3_Checked" Unchecked="Chk_All3_Checked" />
                                        <CheckBox Content="全选16-30" Name="chk_All4" Margin="0 0 10 0" Tag="2" Checked="Chk_All3_Checked" Unchecked="Chk_All3_Checked" />
                                        <CheckBox Content="全选31-45" Name="chk_All5" Margin="0 0 10 0" Tag="3" Checked="Chk_All3_Checked" Unchecked="Chk_All3_Checked" />
                                        <CheckBox Content="全选46-60" Name="chk_All6" Margin="0 0 10 0" Tag="4" Checked="Chk_All3_Checked" Unchecked="Chk_All3_Checked" />

                                    </StackPanel>
                                    <WrapPanel Orientation="Horizontal" Name="panel1" />
                                    <StackPanel Orientation="Vertical" >
                                        <WrapPanel Orientation="Horizontal">
                                            <Button Style="{StaticResource greenButtonStyle}" Content="恢复全部表位" CommandParameter="Set_RelayAll_On"/>
                                            <Button Style="{StaticResource greenButtonStyle}" Content="逐个隔离" CommandParameter="Set_RelayOnebyOne_Off" />
                                            <Button Style="{StaticResource greenButtonStyle}" Content="隔离选中表位" CommandParameter="Set_RelayAll_Off" />
                                            <Button Style="{StaticResource greenButtonStyle}" Content="逐个恢复" CommandParameter="Set_RelayOnebyOne_On" />
                                            <Button Style="{StaticResource greenButtonStyle}" Content="恢复选中表位" CommandParameter="Set_Relay_On" />
                                            <Button Style="{StaticResource greenButtonStyle}" Content="电机下行" CommandParameter="ElectricmachineryContrnl_Down" />
                                            <Button Style="{StaticResource greenButtonStyle}" Content="电机上行" CommandParameter="ElectricmachineryContrnl_Up" />
                                            <Button Style="{StaticResource greenButtonStyle}" Content="读全部状态" Click="ReadStatus_Click"/>
                                            <Button Style="{StaticResource greenButtonStyle}" Content="耐压继电器" Click="SetNaiYa_Click"/>
                                            <Button Style="{StaticResource greenButtonStyle}" Content="恢复耐压继电器" Click="ResetNaiYa_Click"/>
                                        </WrapPanel>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                            <!--状态灯/大小电流-->
                            <Border>
                                <Grid  Height="60">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Orientation="Horizontal" Margin="10,0" DataContext="{StaticResource ErrorControlViewModel}">
                                        <TextBlock Text="状态灯" Style="{StaticResource headTextStyle}" Margin="0,10" />
                                        <TextBlock Text="闪烁:" Margin="10 0 0 0"/>
                                        <Button Width="30" Margin="2 0 2 0" Content="黄" Foreground="Yellow" CommandParameter="Set_Hong2"/>
                                        <Button Width="30" Margin="2 0 2 0" Content="绿" Foreground="Green" CommandParameter="Set_Lv2" />
                                        <Button Width="30" Margin="2 0 2 0" Content="红" Foreground="red" CommandParameter="Set_Huang2" />
                                        <TextBlock Text="点亮:"  VerticalAlignment="Center" Margin=" 20 0 0 0"/>
                                        <Button Width="30" Margin="2 0 2 0" Content="黄" Foreground="Yellow" CommandParameter="Set_Hong" />
                                        <Button Width="30" Margin="2 0 2 0" Content="绿" Foreground="Green" CommandParameter="Set_Lv" />
                                        <Button Width="30" Margin="2 0 2 0" Content="红" Foreground="red" CommandParameter="Set_Huang" />
                                        <Button Width="30" Margin="2 0 2 0" Content="灭" CommandParameter="Set_Guan" />
                                    </StackPanel>
                                    <Border Grid.Column="1" Width="3" Background="White"  Height="30" />
                                    <StackPanel Grid.Column="2" Orientation="Horizontal" DataContext="{StaticResource ErrorControlViewModel}" Margin="10,0" >
                                        <TextBlock Text="大小电流" Style="{StaticResource headTextStyle}" Margin="0,10" />
                                        <Button Content="切互感式供电" CommandParameter="Set_HGRelay" Margin="20 0 10 0"/>
                                        <Button Content="切直接式供电" CommandParameter="Set_ZJRelay" Margin="0 0 10 0"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <!--表位-->
                            <Border DataContext="{StaticResource ErrorControlViewModel}">
                                <StackPanel Orientation="Horizontal"  Height="60">
                                    <TextBlock Text="表位" Style="{StaticResource headTextStyle}" Margin="10,10" />

                                    <TextBlock Text="表位号：" Margin="10,0,0,0"/>
                                    <TextBox Width="40" VerticalAlignment="Center" VerticalContentAlignment="Center" Text="{Binding MeterNo}"/>
                                    <Button Content="读取地址" CommandParameter="ReadAddress" Margin="10,0" />
                                    <Button Content="读取电流值" CommandParameter="ReadCurrent" />
                                    <TextBlock Text="{Binding Address}" Margin=" 5 0 0 0"/>
                                </StackPanel>
                            </Border>
                            <!--光电蓝牙模块-->
                            <Border DataContext="{StaticResource ErrorControlViewModel}">
                                <StackPanel Orientation="Horizontal" Height="60" >
                                    <TextBlock Text="光电蓝牙模块" Style="{StaticResource headTextStyle}" Margin="10,10" />

                                    <Button Margin="3,0" Width="50" Content="复位" CommandParameter="GD_Reset"  />
                                    <Button Margin="3,0" Width="50" Content="连接" CommandParameter="GD_Connect" />
                                    <Button Margin="3,0" Width="50" Content="预处理" CommandParameter="GD_Pretreatment" />
                                    <Button Margin="3,0" Width="100" Content="预处理查询" CommandParameter="GD_PretreatmentSelect" />
                                    <Controls1:ControlEnumComboBox Width="100" Height="30"  EnumName="TestPulseType"  Style="{DynamicResource StyleComboBox}"
                                                      SelectedValue="{Binding ItoPulseType,Mode=TwoWay}" />

                                    <Button Margin="3" Content="切换光电脉冲" CommandParameter="GD_SetLightPulse" />
                                    <Button Margin="3" Content="报文切换电表模式" CommandParameter="GD_SetMeterTestModelConn" />
                                    <Button Margin="3" Content="切换电表模式" CommandParameter="GD_SetMeterTestModelConn" />
                                    <Button Height="30" Width="100" Command="{Binding LocalCommand}" Margin="3" Content="切换转换器模式" CommandParameter="GD_SetConverterModel" />
                                </StackPanel>

                            </Border>
                            <!--误差调试-->
                            <Border DataContext="{StaticResource ErrorControlViewModel}" >
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Text="误差调试" Margin="10,10" Style="{StaticResource headTextStyle}" />
                                    <StackPanel Orientation="Horizontal" Margin="10,0">
                                        <TextBlock Text="标准常数：" />
                                        <TextBox Width="120" Text="{Binding StdConst,Mode=TwoWay}"/>
                                        <Button Style="{StaticResource greenButtonStyle}" Width="50" Content="获取" CommandParameter="GetStdConst" />
                                        <TextBlock Text="电表常数：" Margin="10,0,0,0" />
                                        <TextBox Width="80" Text="{Binding TestedConst,Mode=TwoWay}"/>
                                        <TextBlock Text="检定圈数：" Margin="10,0,0,0" />
                                        <TextBox Width="50" Text="{Binding TestQs,Mode=TwoWay}"/>
                                        <TextBlock Text="脉冲类型：" Margin="10,0,0,0" />
                                        <ComboBox Width="80" Height="30" SelectedItem="{Binding PulseType}" ItemsSource="{Binding PulseTypeList}" Style="{DynamicResource StyleComboBox}" Margin="0 0 20 0"/>
                                    </StackPanel>
                                    <StackPanel  Orientation="Horizontal" Margin="10,0,10,10" >
                                        <Button Content="设置主标准表常数" Width="120" Style="{StaticResource greenButtonStyle}" CommandParameter="SetStdConst" />
                                        <Button Content="设置副标准表常数" Width="120" Style="{StaticResource greenButtonStyle}" CommandParameter="SetStdConstDeviceID" />
                                        <Button Content="设置误差板标准常数" Width="120" Style="{StaticResource greenButtonStyle}" CommandParameter="SetWCStdConst" />
                                        <Button Content="设置误差板被检常数" Width="120" Style="{StaticResource greenButtonStyle}" CommandParameter="SetWcTestConst" />
                                        <Button Content="启动误差版" Style="{StaticResource greenButtonStyle}" CommandParameter="StartWc" />
                                        <Button Content="停止误差版" Style="{StaticResource greenButtonStyle}" CommandParameter="StopWc" />
                                    </StackPanel>
                                </StackPanel>

                            </Border>

                        </StackPanel>
                    </ScrollViewer>
                </DockPanel>
            </TabItem>

            <TabItem Header="数据库查询" DataContext="{StaticResource QueryDataBase}">
                <DockPanel LastChildFill="True">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="0,5">
                        <TextBlock Text="数据库名称" Margin="0 0 5 0"/>
                        <ComboBox Width="250" Height="30" Name="comboBoxDataName"
					       SelectedItem="{Binding DataBaseName}" ItemsSource="{Binding DataBaseNames}" Style="{DynamicResource StyleComboBox}" />
                        <TextBlock Text="表名称" VerticalAlignment="Center" Margin="10,0,0,0"/>
                        <ComboBox Width="250" Height="30" Name="comboBoxTable" SelectedItem="{Binding TableName}" ItemsSource="{Binding TableNames}" Style="{DynamicResource StyleComboBox}"/>
                        <Button Content="查询" Click="Button_Click"/>


                        <TextBlock Text="全路径：" Margin="10,0,0,0"/>
                        <TextBox  Width="180" Name="txt_sql"/>
                        <Button Content="查询" Click="Button_Click2" />
                        <TextBox Name="Txtwhere" Text="SCHEMA_ID"/>
                        <Button Content="DownScheme" Click="DownScheme_Click"/>
                    </StackPanel>
                    <DataGrid ItemsSource="{Binding Data}" />
                </DockPanel>
            </TabItem>

            <TabItem   Header="串口调试" DataContext="{StaticResource Debug_ProtViewModel}">

                <Grid Margin="10" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="210"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>


                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <GroupBox Header="串口配置">
                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Horizontal" Margin="3" >
                                    <TextBlock Text="串口：" VerticalAlignment="Center"    TextAlignment="Right"  Width="50" Margin="0 0 5 0"/>
                                    <ComboBox  Width="130"  Height="24"
					                        SelectedItem="{Binding ProtName}" 
					                        ItemsSource="{Binding ProtList}" Style="{DynamicResource StyleComboBox}"
                                            Margin="0 0 20 0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal"  Margin="3"  >
                                    <TextBlock Text="波特率：" VerticalAlignment="Center"   TextAlignment="Right"  Width="50" Margin="0 0 5 0"/>
                                    <ComboBox  Width="130"  Height="24"
					                           SelectedItem="{Binding BaudRate}"  
					                           ItemsSource="{Binding BaudRateList}" Style="{DynamicResource StyleComboBox}"
                                               Margin="0 0 20 0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal"  Margin="3"  >
                                    <TextBlock Text="数据位：" VerticalAlignment="Center"   TextAlignment="Right"  Width="50" Margin="0 0 5 0"/>
                                    <ComboBox  Width="130"  Height="24"
					                          SelectedItem="{Binding DataBit}"  
					                          ItemsSource="{Binding DataBitList}" Style="{DynamicResource StyleComboBox}"
                                               Margin="0 0 20 0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal"  Margin="3"  >
                                    <TextBlock Text="停止位：" VerticalAlignment="Center"   TextAlignment="Right"  Width="50" Margin="0 0 5 0"/>
                                    <ComboBox  Width="130"  Height="24"
					                          SelectedItem="{Binding StopBit}"  
					                          ItemsSource="{Binding StopBitList}" Style="{DynamicResource StyleComboBox}"
                                               Margin="0 0 20 0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal"  Margin="3"  >
                                    <TextBlock Text="校验：" VerticalAlignment="Center"   TextAlignment="Right"  Width="50" Margin="0 0 5 0"/>
                                    <ComboBox  Width="130"  Height="24"
					                           SelectedItem="{Binding CheckType}" 
					                          ItemsSource="{Binding CheckTypeList}" Style="{DynamicResource StyleComboBox}"
                                               Margin="0 0 20 0"/>
                                </StackPanel>

                                <Button Content="{Binding ProtStartName}" Margin="5" CommandParameter="OpenPort" />


                            </StackPanel>

                        </GroupBox>

                        <GroupBox Header="其他设置" Margin=" 0 10 0 0" Grid.Row="1">
                            <StackPanel Orientation="Vertical" Margin="5">
                                <Button Content="{Binding PortDataLogName}" HorizontalAlignment="Left" CommandParameter="OpenPortDataLog" />
                                <CheckBox Content="Hex发送接收" IsChecked="{Binding IsHexSendData}"  FontSize="14" Margin="0 5 0 5"/>
                                <CheckBox Content="连续发送" IsChecked="True" FontSize="14"/>

                            </StackPanel>
                        </GroupBox>
                    </Grid>


                    <Grid Grid.Column="1" Margin="10 0 10 0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition  Height="200"/>
                        </Grid.RowDefinitions>

                        <GroupBox Header="收发记录">
                            <TextBox Text="{Binding ReceiveData}" Style="{x:Null}" BorderThickness="0" VerticalContentAlignment="Top" Margin="5" TextWrapping="Wrap">
                                <TextBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="清空" Click="MenuItem_Click" />
                                    </ContextMenu>
                                </TextBox.ContextMenu>
                            </TextBox>
                        </GroupBox>
                        <GroupBox Header="发送数据" Grid.Row="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="30   "/>
                                </Grid.RowDefinitions>
                                <TextBox Text="{Binding SendData}" Background="White" Style="{Binding }" Margin="5" TextWrapping="Wrap">
                                    <TextBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="清空" Click="MenuItem_Click2" />
                                        </ContextMenu>
                                    </TextBox.ContextMenu>
                                </TextBox>

                                <Button CommandParameter="But_SendData" Content="发 送" Grid.Row="1" Style="{StaticResource greenButtonStyle}" />
                            </Grid>
                        </GroupBox>
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem   Header="时区时段设置" DataContext="{StaticResource TimeZonePeriodViewModel}">

                <Grid Margin="0,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>


                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TabControl SelectedIndex="{Binding SelectIndex}">
                            <TabItem Header="第一套时段表数据">
                                <ListBox ItemsSource="{Binding TimeData1}" SelectedIndex="{Binding ListSelectIndex}"/>
                            </TabItem>
                            <TabItem Header="第二套时段表数据">
                                <ListBox ItemsSource="{Binding TimeData2}"  SelectedIndex="{Binding ListSelectIndex}"/>
                            </TabItem>
                        </TabControl>

                        <StackPanel Orientation="Vertical" Grid.Column="1" Margin="5 0">
                            <GroupBox Header="时区">
                                <Grid>
                                    <StackPanel Orientation="Horizontal" Margin="5"   >
                                        <TextBlock Text="起始日期  " VerticalAlignment="Center"/>
                                        <ComboBox  Width="50"  Height="20"
					                        SelectedItem="{Binding TimeZone_Month}" 
					                        ItemsSource="{Binding MonthList}" Style="{DynamicResource StyleComboBox}"/>
                                        <TextBlock Text="月"  VerticalAlignment="Center"/>
                                        <ComboBox  Width="50"  Height="20"
					                        SelectedItem="{Binding TimeZone_Day}" 
					                        ItemsSource="{Binding DayList}" Style="{DynamicResource StyleComboBox}"/>
                                        <TextBlock Text="日"    VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <Button Content="添 加" Width="50" Margin="10,5" HorizontalAlignment="Right" Style="{StaticResource greenButtonStyle }"
                                            CommandParameter="AddTimeZone" />
                                </Grid>

                            </GroupBox>

                            <GroupBox Header="时段">
                                <Grid>
                                    <StackPanel Orientation="Horizontal" Margin="5"   >
                                        <TextBlock Text="费率  " VerticalAlignment="Center"/>
                                        <TextBox Width="50" Height="25" Text="{Binding TimeInterval_Time}" BorderThickness="1,1,0,1" />
                                        <ComboBox  Width="50"  Height="20"
					                        SelectedItem="{Binding TimeInterval_FL}" 
					                        ItemsSource="{Binding FlList}" Style="{DynamicResource StyleComboBox}"/>

                                        <StackPanel Orientation="Vertical" VerticalAlignment="Center" >
                                            <Button Content="︿" FontSize="8" Height="12"  Width="18" Margin="1 0" CommandParameter="AddTimeInterval_Time"  Command="{Binding LocalCommand}" />
                                            <Button Content="﹀" FontSize="8"  Height="12"  Width="18" Margin="1 0" CommandParameter="ReduceTimeInterval_Time"  Command="{Binding LocalCommand}"/>
                                        </StackPanel>

                                    </StackPanel>
                                    <Button Content="添 加" Width="50" Margin="10 5" HorizontalAlignment="Right" Style="{StaticResource greenButtonStyle }"
                                          CommandParameter="AddTimeInterval" />
                                </Grid>

                            </GroupBox>
                            <GroupBox Header="其他">
                                <StackPanel Orientation="Vertical">

                                    <StackPanel Orientation="Horizontal" >
                                        <TextBlock Text="两套费率切换时间:" VerticalAlignment="Center" />
                                        <DatePicker Width="180" Margin="5 0" SelectedDate="{Binding SwitchingTime}">
                                            <DatePicker.Resources>
                                                <Style TargetType="{x:Type DatePickerTextBox}">
                                                    <Setter Property="Control.Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <TextBox Text="{Binding Path=SelectedDate, RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}, StringFormat={}{0:yyyy/MM/dd HH:mm:ss}}" />
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </DatePicker.Resources>
                                        </DatePicker>
                                    </StackPanel>

                                    <Button Content="第二套复制第一套" Width="130" Height="30" Margin="10,5" 
                                            HorizontalAlignment="Right" Style="{StaticResource greenButtonStyle }"
                                         CommandParameter="TowCopyOne" />
                                </StackPanel>
                            </GroupBox>

                            <GroupBox Header="操作">
                                <StackPanel Orientation="Horizontal">

                                    <Button Content="清空" Width="120" Height="30" Margin="5" Style="{StaticResource greenButtonStyle }"
                                       CommandParameter="ClearData" />

                                    <Button Content="删除选择项" Width="120" Height="30" Margin="5" Style="{StaticResource greenButtonStyle }"
                                       CommandParameter="DeleteData" />
                                </StackPanel>
                            </GroupBox>

                            <StackPanel Orientation="Horizontal" Margin="6,0,0,0" >
                                <Button Content="读取表内时段" Width="120" Height="30"  Margin="5"  
                                  CommandParameter="ReadDateTime" />
                                <Button Content="写入时段" Width="120" Height="30"  Margin="5" 
                                  CommandParameter="WriteDateTime" />
                            </StackPanel>




                        </StackPanel>
                    </Grid>

                    <Grid Grid.Column="1" >
                        <GroupBox Header="信息" Margin="5 0 10 0">
                            <TextBox Style="{x:Null}" TextWrapping="Wrap" Foreground="Red" Margin="3"  BorderThickness="0" Text="{Binding Tips}" />
                        </GroupBox>
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem  Header="谐波调试"  DataContext="{StaticResource Debug_HarmonicViewModel}">
                <TabItem.Resources>
                    <Style x:Key="CheckBoxSwitchStyle" TargetType="CheckBox">
                        <Setter Property="IsChecked" Value="False"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="FontFamily" Value="/MESToolIntegration;component/Fonts/#iconfont"/>
                        <Setter Property="Background" Value="#FFFFFF"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="CheckBox">
                                    <Border Width="54" Name="CheckTrueBG" Height="22" BorderThickness="1" Background="#FFFFFF"  CornerRadius="10" BorderBrush="#ACACAC" >
                                        <Grid>
                                            <Border BorderThickness="1" Background="#ACACAC" x:Name="border" Width="20" Height="20" CornerRadius="9" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0"  >
                                                <Border.RenderTransform>
                                                    <TranslateTransform  X="1"/>
                                                </Border.RenderTransform>
                                            </Border>
                                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="iconfont"  FontSize="{TemplateBinding FontSize}" Margin="7,3.5,0,3" VerticalAlignment="Stretch" Foreground="#ACACAC" HorizontalAlignment="Left" d:LayoutOverrides="Height" >
                                                <TextBlock.RenderTransform>
                                                    <TranslateTransform   X="17"></TranslateTransform>
                                                </TextBlock.RenderTransform>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter Property="Background" TargetName="CheckTrueBG"  Value="{DynamicResource SuccessColor}"/>
                                            <Setter Property="Foreground" TargetName="txt"  Value="#FFFFFF"/>
                                            <Setter Property="Background" TargetName="border"  Value="#FFFFFF"/>
                                            <Setter Property="Text" TargetName="txt"  Value="{Binding Tag,RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="32" Duration="00:00:0.2"/>
                                                        <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                                        <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="17" Duration="00:00:0.2"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="Text" TargetName="txt" Value="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabItem.Resources>

                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="350"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <GroupBox Header="谐波设置" Padding="5">
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal"  Margin="5">
                                <TextBlock Text="谐波类型:" VerticalAlignment="Center"/>
                                <ComboBox  Width="130"  Height="24"
					                        SelectedItem="{Binding HarmonicType}" 
					                        ItemsSource="{Binding HarmonicTypeList}" Style="{DynamicResource StyleComboBox}"
                                            Margin="0 0 20 0"/>
                                <TextBlock Text="谐波开关:" VerticalAlignment="Center"/>
                                <CheckBox  HorizontalAlignment="Left" IsChecked="{Binding IsEnableHarmonic ,Mode=TwoWay}" BorderThickness="1,1,0,1" Style="{DynamicResource CheckBoxSwitchStyle}" VerticalAlignment="Center"  Content="OFF" Tag="NO" />

                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="5">
                                <TextBlock Text="UA:" Margin="5" Width="30"/>
                                <CheckBox  HorizontalAlignment="Left"  IsChecked="{Binding IsUA ,Mode=TwoWay}" BorderThickness="1,1,0,1" Style="{DynamicResource CheckBoxSwitchStyle}" VerticalAlignment="Center"  Content="OFF" Tag="NO" />
                                <TextBlock Text="IA:" Margin="20  5 5 5"  Width="30"/>
                                <CheckBox  HorizontalAlignment="Left" IsChecked="{Binding IsIA ,Mode=TwoWay}" BorderThickness="1,1,0,1" Style="{DynamicResource CheckBoxSwitchStyle}" VerticalAlignment="Center"  Content="OFF" Tag="NO" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal"  Margin="5">
                                <TextBlock Text="UB:" Margin="5" Width="30"/>
                                <CheckBox  HorizontalAlignment="Left" IsChecked="{Binding IsUB ,Mode=TwoWay}" BorderThickness="1,1,0,1" Style="{DynamicResource CheckBoxSwitchStyle}" VerticalAlignment="Center"  Content="OFF" Tag="NO" />

                                <TextBlock Text="IB:" Margin="20  5 5 5" Width="30"/>
                                <CheckBox  HorizontalAlignment="Left" IsChecked="{Binding IsIB ,Mode=TwoWay}" BorderThickness="1,1,0,1" Style="{DynamicResource CheckBoxSwitchStyle}" VerticalAlignment="Center"  Content="OFF" Tag="NO" />

                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="5" >
                                <TextBlock Text="UC:" Margin="5" Width="30"/>
                                <CheckBox  HorizontalAlignment="Left" IsChecked="{Binding IsUC ,Mode=TwoWay}" BorderThickness="1,1,0,1" Style="{DynamicResource CheckBoxSwitchStyle}" VerticalAlignment="Center"  Content="OFF" Tag="NO" />
                                <TextBlock Text="IC:" Margin="20  5 5 5" Width="30"/>
                                <CheckBox  HorizontalAlignment="Left" IsChecked="{Binding IsIC ,Mode=TwoWay}" BorderThickness="1,1,0,1" Style="{DynamicResource CheckBoxSwitchStyle}" VerticalAlignment="Center"  Content="OFF" Tag="NO" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5" Visibility="{Binding HarmonicContent_Visible,Converter={StaticResource BoolToVisibilityConverter}}" >
                                <TextBlock Text="谐波含量：" VerticalAlignment="Center"/>
                                <TextBox Width="70" Margin="5" Text="{Binding HarmonicContent,Mode=TwoWay}"/>
                                <TextBlock Text="谐波相位：" VerticalAlignment="Center"  Margin="10 0 0 0"/>
                                <TextBox Width="70" Margin="5" Text="{Binding HarmonicPhase,Mode=TwoWay}" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5" Visibility="{Binding HarmonicNumbere_Visible,Converter={StaticResource BoolToVisibilityConverter}}" >
                                <TextBlock Text="谐波次数：" VerticalAlignment="Center"/>
                                <TextBox Width="70" Margin="5" Text="{Binding HarmonicNumber,Mode=TwoWay}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5" Visibility="{Binding HarmonicNumbere_Visible,Converter={StaticResource BoolToVisibilityConverter}}" >
                                <TextBlock Text="读取标准表谐波信息：" VerticalAlignment="Center"/>
                                <CheckBox  HorizontalAlignment="Left" IsChecked="{Binding IsReadStaData ,Mode=TwoWay}" BorderThickness="1,1,0,1" Style="{DynamicResource CheckBoxSwitchStyle}" VerticalAlignment="Center"  Content="OFF" Tag="NO" />
                            </StackPanel>
                            <Button Content="设置" Width="80" Height="30"  Margin="10"  HorizontalAlignment="Center" 
                                            CommandParameter="SetHarmonic"  Command="{Binding LocalCommand}" />

                        </StackPanel>
                    </GroupBox>

                    <GroupBox Grid.Column="1" Margin="5" Header="谐波信息">
                        <TabControl x:Name="tabHarmonic" Background="Transparent">
                            <!--<StackPanel Orientation="Horizontal" Name="stackpanel_data"></StackPanel>-->
                        </TabControl>

                    </GroupBox>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</basemodel:DockControlDisposable>